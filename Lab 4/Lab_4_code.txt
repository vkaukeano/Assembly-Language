1-1
a.
; Lab 4.asm
;
; Created: 9/26/2019 9:13:13 AM
; Author : Von Kaukeano
;


; Replace with your application code
start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	LDI R16, 0XFF //LOAD R16
	OUT DDRA,R16 // SET TO OUTPUT
	LDI R17,$4A // LOAD R17
	OUT PORTA, R17

1-1
b.
start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	LDI R16, 0XFF //LOAD R16
	OUT DDRB,R16 // SET TO OUTPUT
	LDI R17,0b10011111 // LOAD R17
	OUT PORTB, R17 

1-1
c.
start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	LDI R16, 0XFF //LOAD R16
	OUT DDRC,R16 // SET TO OUTPUT
	LDI R17,96 // LOAD R17
	OUT PORTC, R17 

1-1
d.
start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	LDI R16, 0XFF //LOAD R16
	OUT DDRD,R16 // SET TO OUTPUT
	LDI R17,'P' // LOAD R17
	OUT PORTD, R17 

1-1
e.
start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	LDI R16, 0XFF //LOAD R16
	OUT DDRA,R16 // SET TO OUTPUT
	LDI R17,$C1 // LOAD R17
	COM R17     // 2's Complement
	OUT PORTA, R17 

1-1
f.
start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	LDI R16, 0XFF //LOAD R16
	OUT DDRB,R16 // SET TO OUTPUT
	LDI R17,$54 // LOAD R17
	LDI R18,$1F // LOAD R18\
	ADD R17,R18
	OUT PORTB, R17 

1-2

start:
    LDI R16, LOW(RAMEND)
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17

	.equ HexNum = 0x0100
	.equ BinNum = 0x0101
	.equ DecNum = 0x0102
	.equ ASCIINum = 0x0103
	.equ TwoComp = 0x0104
	.equ SumNum = 0x0105
	
	LDI R17,$54 // LOAD R17
	LDI R18,0b010011111 // LOAD R18
	LDI R19,96 //LOAD R19
	LDI R20,'P' //LOAD R20
	LDI R21,$C1 //LOAD R21
	COM R21
	LDI R22,$54 // LOAD R22
	LDI R23,$1F // LOAD R23
	ADD R22,R23

	STS HexNum, R17
	STS BinNum, R18
	STS DecNum, R19
	STS ASCIINum, R20
	STS TwoComp, R21
	STS SumNum, R22

2-1

;
; Lab 4.asm
;
; Created: 9/26/2019 9:13:13 AM
; Author : Von Kaukeano
;


; Replace with your application code
	start:
	// INITIATE STACK POINTER
    	LDI R16, LOW(RAMEND) 
	OUT SPL, R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17
	
	LDI R18,'F' // LOAD R18
	LDI R19,'a' // LOAD R19
	LDI R20,'l' //LOAD R20
	LDI R21,'l' //LOAD R21
	LDI R22,'2' //LOAD R22
	LDI R23,'0' // LOAD R23
	LDI R24,'1' // LOAD R24
	LDI R25,'9' // LOAD R25
	LDI R26,'P' // LOAD R26
	LDI R27,'S' // LOAD R27
	LDI R28,0 //LOAD R28
	LDI R29,0 //LOAD R28
	LDI R30,0 //LOAD R28
	LDI R31,0 //LOAD R28

	//STORE INTO MEMORY LOCATION
	STS 0x0200, R18 
	STS 0x0201, R19
	STS 0x0202, R20
	STS 0x0203, R21
	STS 0x0204, R22
	STS 0x0205, R23
	STS 0x0206, R24
	STS 0x0207, R25
	STS 0x0208, R26
	STS 0x0209, R27

	//SET X POINTER TO THE MEMORY LOCATION AT 0X200
	LDI XL,0x00 // ASSIGN LOWER BYTE OF THE ADDRESS  TO THE X POINTER LOWER BYTE LOCATION
	LDI XH,0x02 // ASSIGN HIGHER BYTE OF THE ADDRESS  TO THE X POINTER HIGHER BYTE LOCATION

OP: ld R28,x+ //LOAD R28 WITH LOOPING MEMORY LOCATIONS  // LOOP THROUGH MEMORY LOCATIONS AND LOAD IN R28
	CPI R28,0 // COMPARE R28 TO 0
	BREQ OUTPUT // IF R28 IS 0,BRANCH TO OUTPUT

	CPI R28,0X3A // COMPARE R28 WITH 0X3A. THE HIGHEST VALUE TO BE A NUMBER
	BRLO NUMBER_COUNT // BRANCH TO NUMBER_COUNT IF R28 IS LOWER 
	
	CPI R28,0X5B // COMPARE R28 WITH 0X5B. THE HIGHEST VALUE TO BE UPPER CASE
	BRLO UPCASE_COUNT // BRANCH TO NUMBER_COUNT IF R28 IS LOWER 
	
	CPI R28,0X7B // COMPARE R28 WITH 0X5B. THE HIGHEST VALUE TO BE UPPER CASE
	BRLO LOWCASE_COUNT // BRANCH TO NUMBER_COUNT IF R28 IS LOWER 
	
NUMBER_COUNT:
	INC R31 //COUNTER FOR NUMBER
	RJMP OP //BACK TO LOOP

UPCASE_COUNT:
	INC R29 //COUNTER FOR UPPERCASE
	RJMP OP //BACK TO LOOP

LOWCASE_COUNT:
	INC R30 //COUNTER FOR LOWERCASE
	RJMP OP //BACK TO LOOP

OUTPUT:
	OUT PORTA,R29 //OUTPUT PORTA
	OUT PORTB,R30 //OUTPUT PORTB
	OUT PORTC,R31 //OUTPUT PORTC

HERE: RJMP HERE



