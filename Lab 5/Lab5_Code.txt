1-1

start:
	LDI R16, 0x10
	OUT SPL, R16
	LDI R17, 0x02
	OUT SPH, R17

	LDI R16,$34
	LDI R17,$11
	LDI R18,$92
	LDI R19,$0F
	LDI R20,$10
	LDI R21,$C5
	LDI R22,$67

	PUSH R16
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	PUSH R21
	PUSH R22

HERE:RJMP HERE

1-2

start:
	LDI R16, 0x10
	OUT SPL, R16
	LDI R17, 0x02
	OUT SPH, R17

	LDI R16,$34
	LDI R17,$11
	LDI R18,$92
	LDI R19,$0F
	LDI R20,$10
	LDI R21,$C5
	LDI R22,$67

	PUSH R16
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	PUSH R21
	PUSH R22

	POP R16
	POP R17
	ADD R17,R16
	OUT PORTA, R17
	CALL PORT
	
	BCLR 0
	POP R17
	POP R16
	SUB R17,R16
	OUT PORTB,R17
	CALL PORT

	BCLR 0
	POP R16
	POP R17
	POP R18
	ADD R17,R16
	SUB R17,R18
	OUT PORTC,R17
	CALL PORT

HERE: RJMP HERE

PORT:
	LDI R20,0X00
	OUT PORTD,R20
	SBRS R17,0
	LDI R20,0XFF
	OUT PORTD,R20
	RET


2-1

start:
	.equ NUM_SET1 = 0x0250
	.equ NUM_SET2 = 0x0254
	.equ OUT_LOG  = 0x0270

	LDI R16,LOW(RAMEND)
	OUT SPL, R16
	LDI R17,HIGH(RAMEND)
	OUT SPH, R17
	
	LDI XL, LOW(NUM_SET1)
	LDI XH, HIGH(NUM_SET1)

	LDI YL, LOW(NUM_SET2)
	LDI YH, HIGH(NUM_SET2)

	LDI ZL, LOW(OUT_LOG)
	LDI ZH, HIGH(OUT_LOG)

	; NUM_SET1
	LDI R16,0x19
	ST X,R16

	LDI R16,0x02
	ST -X,R16
	
	LDI R16,0xC5
	ST -X,R16

	LDI R16,0x66
	ST -X,R16

	; NUM_SET2
	LDI R16,0x4A
	ST Y,R16

	LDI R16,0x18
	ST -Y,R16

	LDI R16,0x23
	ST -Y,R16

	LDI R16,0xF4
	ST -Y,R16

	LDI XL, LOW(NUM_SET1)
	LDI XH, HIGH(NUM_SET1)

	LDI YL, LOW(NUM_SET2)
	LDI YH, HIGH(NUM_SET2)

	CALL Num_and
	CALL Num_or
	CALL Num_nand
	CALL Num_exor

HERE: RJMP HERE

	Num_and:
	LD R16,X
	LD R17,Y
	AND R16,R17
	ST Z,R16
	OUT PORTD,R16
	RET

	Num_or:
	LD R16,-X
	LD R17,-Y
	OR R16,R17
	ST -Z,R16
	OUT PORTC,R16
	RET

	Num_nand:
	LD R16,-X
	LD R17,-Y
	AND R16,R17
	COM R16
	ST -Z,R16
	OUT PORTB,R16
	RET

	Num_exor:
	LD R16,-X
	LD R17,-Y
	EOR R16,R17
	ST -Z,R16
	OUT PORTA,R16
	RET


EC

start:
	.equ NUM_SET1 = 0x0250
	.equ NUM_SET2 = 0x0254
	.equ OUT_LOG  = 0x0270

	LDI R16,LOW(RAMEND)
	OUT SPL, R16
	LDI R17,HIGH(RAMEND)
	OUT SPH, R17
	
	LDI XL, LOW(NUM_SET1)
	LDI XH, HIGH(NUM_SET1)

	LDI YL, LOW(NUM_SET2)
	LDI YH, HIGH(NUM_SET2)

	LDI ZL, LOW(OUT_LOG)
	LDI ZH, HIGH(OUT_LOG)

	; NUM_SET1
	LDI R16,0x19
	ST X,R16

	LDI R16,0x02
	ST -X,R16
	
	LDI R16,0xC5
	ST -X,R16

	LDI R16,0x66
	ST -X,R16

	; NUM_SET2
	LDI R16,0x4A
	ST Y,R16

	LDI R16,0x18
	ST -Y,R16

	LDI R16,0x23
	ST -Y,R16

	LDI R16,0xF4
	ST -Y,R16

	LDI XL, LOW(NUM_SET1)
	LDI XH, HIGH(NUM_SET1)

	LDI YL, LOW(NUM_SET2)
	LDI YH, HIGH(NUM_SET2)
	CALL DELAY
	CALL Num_and
	CALL DELAY
	CALL Num_or
	CALL DELAY
	CALL Num_nand
	CALL DELAY
	CALL Num_exor
	CALL DELAY

HERE: RJMP HERE

	Num_and:
	LD R16,X
	LD R17,Y
	AND R16,R17
	ST Z,R16
	OUT PORTC,R16
	RET

	Num_or:
	LD R16,-X
	LD R17,-Y
	OR R16,R17
	ST -Z,R16
	OUT PORTC,R16
	RET

	Num_nand:
	LD R16,-X
	LD R17,-Y
	AND R16,R17
	COM R16
	ST -Z,R16
	OUT PORTC,R16
	RET

	Num_exor:
	LD R16,-X
	LD R17,-Y
	EOR R16,R17
	ST -Z,R16
	OUT PORTC,R16
	RET

DELAY:
ldi  r18, 21
ldi  r19, 199
L1: dec  r19
    brne L1
    dec  r18
    brne L1
RET
